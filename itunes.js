// Generated by CoffeeScript 1.6.3
(function() {
  var colorRound, componentToHex, getCoverColors, getTopColors, rgbToHex, rgbToInt, styleAlbumSection,
    __hasProp = {}.hasOwnProperty;

  getCoverColors = function(cover) {
    var b, canvas, color, colorData, colorInt, colorTable, context, g, i, image, imgH, imgW, pixels, r, rawColorData, topColors;
    canvas = $("<canvas></canvas>").get(0);
    context = canvas.getContext("2d");
    imgW = cover.width();
    imgH = cover.height();
    canvas.width = imgW;
    canvas.height = imgH;
    image = cover.get(0);
    context.drawImage(image, 0, 0, imgW, imgH);
    pixels = context.getImageData(0, 0, imgW, imgH);
    rawColorData = pixels.data;
    colorData = {};
    colorTable = {};
    i = 0;
    while (i < rawColorData.length) {
      r = rawColorData[i];
      g = rawColorData[i + 1];
      b = rawColorData[i + 2];
      colorInt = rgbToInt(r, g, b);
      colorData[colorInt] = colorData[colorInt] ? colorData[colorInt] + 1 : 1;
      if (!colorTable.hasOwnProperty([r, g, b])) {
        colorTable[colorInt] = [r, g, b];
      }
      i = i + 500;
    }
    colorData = getTopColors(colorData);
    topColors = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = colorData.length; _i < _len; _i += 3) {
        color = colorData[_i];
        _results.push(colorTable[color[0]]);
      }
      return _results;
    })();
    topColors[2] = topColors[3];
    topColors[3] = [rawColorData[0], rawColorData[1], rawColorData[2], rawColorData[3]];
    return topColors;
  };

  getTopColors = function(colors) {
    var color, sortable;
    sortable = [];
    for (color in colors) {
      if (!__hasProp.call(colors, color)) continue;
      sortable.push([color, colors[color]]);
    }
    sortable.sort(function(a, b) {
      return b[1] - a[1];
    });
    return sortable.slice(0, 12);
  };

  rgbToInt = function(r, g, b) {
    var color;
    r = colorRound(r);
    g = colorRound(g);
    b = colorRound(b);
    return color = 256 * 256 * r + 256 * g + b;
  };

  colorRound = function(value) {
    var rounded;
    rounded = Math.round(value / 85) * 85;
    return rounded;
  };

  componentToHex = function(c) {
    var hex;
    hex = c.toString(16);
    if (hex.length === 1) {
      return "0" + hex;
    } else {
      return hex;
    }
  };

  rgbToHex = function(rgb) {
    return "#" + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);
  };

  styleAlbumSection = function(albumId) {
    var albumColors;
    albumId = "#" + albumId;
    albumColors = getCoverColors($(".cover img", albumId));
    $(albumId).css("backgroundColor", rgbToHex(albumColors[3]));
    $(".title", albumId).css("color", rgbToHex(albumColors[1]));
    $(".list", albumId).css("color", rgbToHex(albumColors[2]));
  };

  $('body').load(function() {
    $(".album").each(function() {
      styleAlbumSection($(this).attr("id"));
    });
  });

}).call(this);
